# imports

import os
from dotenv import load_dotenv
from openai import OpenAI
import gradio as gr

# Load environment variables in a file called .env
# Print the key prefixes to help with any debugging

load_dotenv(override=True)
openai_api_key = os.getenv('OPENAI_API_KEY')
anthropic_api_key = os.getenv('ANTHROPIC_API_KEY')
google_api_key = os.getenv('GOOGLE_API_KEY')

if openai_api_key:
    print(f"OpenAI API Key exists and begins {openai_api_key[:8]}")
else:
    print("OpenAI API Key not set")
    
if anthropic_api_key:
    print(f"Anthropic API Key exists and begins {anthropic_api_key[:7]}")
else:
    print("Anthropic API Key not set")

if google_api_key:
    print(f"Google API Key exists and begins {google_api_key[:8]}")
else:
    print("Google API Key not set")




  # Initialize

openai = OpenAI()
MODEL = 'qwen/qwen3-next-80b-a3b-thinking'


system_message = "You are a helpful assistant"



def chat(message, history):
    """
    message: str (new user message)
    history: list of dicts [{"role": "user"/"assistant", "content": "..."}]
    """
    
    messages = [{"role": "system", "content": system_message}]
    
    # Add conversation history (already in dict format)
    messages.extend(history)
    
    # Add the new user message
    messages.append({"role": "user", "content": message})
    
    print("Messages sent to model:", messages)
    
    # Request response from NVIDIA/OpenAI
    completion = openai.chat.completions.create(
        model=MODEL,
        messages=messages,
        stream=False  # safe for Jupyter
    )
    
    # Extract the assistant response
    response = completion.choices[0].message.content
    
    # Append assistant response to history for Gradio
    history.append({"role": "user", "content": message})
    history.append({"role": "assistant", "content": response})
    
    return history, history



  with gr.Blocks() as demo:
    chatbot = gr.Chatbot(type="messages")
    msg = gr.Textbox()
    submit = gr.Button("Send")

    submit.click(chat, inputs=[msg, chatbot], outputs=[chatbot, chatbot])

demo.launch()




  
    print("Google API Key not set")
